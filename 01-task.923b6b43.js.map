{"version":3,"sources":["js/01-task.js"],"names":["delay","ms","Promise","resolve","logger","time","console","log","then"],"mappings":";AAKA,IAAMA,EAAQ,SAAAC,GACL,OAAA,IAAIC,QAAQ,SAAAC,GAAWA,OAAAA,EAAQF,MAGlCG,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBL,EAAM,KAAMQ,KAAKJ,GACjBJ,EAAM,KAAMQ,KAAKJ,GACjBJ,EAAM,MAAMQ,KAAKJ","file":"01-task.923b6b43.js","sourceRoot":"..\\src","sourcesContent":["/*Напиши функцию delay(ms), которая возвращает промис, переходящий \r\nв состояние \"resolved\" через ms миллисекунд. Значением исполнившегося \r\nпромиса должно быть то кол-во миллисекунд которое передали во время \r\nвызова функции delay */\r\n\r\nconst delay = ms => {\r\n  return new Promise(resolve => resolve(ms));\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// // Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms"]}